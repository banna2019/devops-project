---
- name: Create WS Websocket target group
  elb_target_group:
    name: "{{ elb_vpc_name }}-{{ app_elb_name }}"
    region: "{{ region }}"
    state: "{{ elb_resource_state }}"
    tags:
      env: "{{ elb_vpc_name }}-{{ app_target_name }}"
    protocol: http
    port: 80
    vpc_id: "{{ elb_vpc_id }}"
    health_check_path: '/mqtt/status'
    successful_response_codes: "200"
    target_type: instance
    targets:
      - Id: "{{ emqtt_instance_ids[0] }}"
        Port: 8083
  register: mq8083_tg

- name: Create an ELB Application Load Balancer and attach EMQ-WS listener
  elb_application_lb:
    name: "{{ elb_vpc_name }}-{{ app_elb_name }}"
    region: "{{ region }}"
    security_groups:
      - "{{ sg_ws_id }}" 
    subnets:
      - "{{ subnet_ec2_ids[0] }}" 
      - "{{ subnet_ec2_ids[1] }}" 
      - "{{ subnet_ec2_ids[2] }}" 
    idle_timeout: 600  #seconds
    tags:
      env: "{{ elb_vpc_name }}-{{ app_elb_name }}"
    deletion_protection: true
    listeners:
      - Protocol: HTTP
        Port: 80
        DefaultActions:
          - Type: forward
            TargetGroupName: "{{ mq8083_tg.target_group_name }}"
        Rules:
          - Conditions:
              - Field: path-pattern
                Values:
                  - '/mqtt/status'
            Priority: '1'
            Actions:
              - Type: forward
                TargetGroupName: "{{ mq8083_tg.target_group_name }}"
    state: "{{ elb_resource_state }}"
